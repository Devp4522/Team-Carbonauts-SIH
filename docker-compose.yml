version: '3.8'

services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: bluecarbon-postgres
    environment:
      POSTGRES_DB: bluecarbon
      POSTGRES_USER: bluecarbon
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - bluecarbon

  # IPFS Node (local development)
  ipfs:
    image: ipfs/kubo:latest
    container_name: bluecarbon-ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - bluecarbon

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: bluecarbon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bluecarbon

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bluecarbon-backend
    environment:
      DATABASE_URL: postgresql://bluecarbon:password@postgres:5432/bluecarbon?schema=public
      PORT: 4000
      NODE_ENV: development
      JWT_SECRET: dev-jwt-secret-change-in-production
      HARDHAT_NETWORK: http://hardhat:8545
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - bluecarbon
    command: npm run dev

  # Hardhat Local Network
  hardhat:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    container_name: bluecarbon-hardhat
    ports:
      - "8545:8545"
    volumes:
      - ./contracts:/app
      - /app/node_modules
    networks:
      - bluecarbon
    command: npx hardhat node --hostname 0.0.0.0

volumes:
  postgres_data:
  ipfs_data:
  redis_data:

networks:
  bluecarbon:
    driver: bridge